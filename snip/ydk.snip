snippet     snip
options     head
    //@@@@@@@@@@
    //@ snippet ${1}
    //@ alias   ${2}
    //@ options ${3}
    ${0}
    //@@@@@@@@@@

snippet     random
options     head, indent
    random_device gen;
    mt19937 mt(gen());
    using RR = uniform_int_distribution<int>;

snippet     o1
options     head
    cout << ${1:ans} << "\n";

snippet     o2
options     head
    cout << ${1} << ' ' << ${2} << "\n";

snippet     all
abbr        x.begin(), x.end()
options     head
    ${1}.begin(), $1.end()

snippet     rall
abbr        x.begin(), x.end()
options     head
    ${1}.rbegin(), $1.rend()

snippet     unique
options     head

snippet     yesno
abbr        yes, no
    print((${1}) ? "yes" : "no");

snippet     YesNo
abbr        Yes, No
    print((${1}) ? "Yes" : "No");

snippet     YESNO
abbr        Yes, No
    print((${1}) ? "YES" : "NO");

snippet     Heap
abbr        priority_queue
options     head
    template<class T> using MaxHeap = priority_queue<T>;
    template<class T> using MinHeap = priority_queue<T, vector<T>, greater<T>>;

snippet     memset
abbr        memset()
options     head
    memset(${1}, ${2:-1}, sizeof($1));

snippet     fi
abbr        first
options     word
    first

snippet     se
abbr        first
options     word
    second

snippet     pb
abbr        push_back
options     word
    push_back(${1});

snippet     eb
abbr        emplace_back
options     word
    emplace_back(${1});

snippet     emp
abbr        emplace
options     word
    emplace(${1});

snippet     ret
abbr        return
options     word
    return

snippet     1e9
options     head
    constexpr int MOD = int(1e9) + 7;

snippet     9982
options     head
    constexpr int MOD = 998244353;

snippet     tuple
alias       make_tuple mktple
options     head
    make_tuple(${1});

snippet     fastIO
alias       fastio cin.tie ios::sync_with_stdio
options     head
    cin.tie(nullptr); ios_base::sync_with_stdio(false);

snippet     fixed
alias       setprecision
options     word
    cout << fixed << setprecision(12);

snippet     main
options     head indent
    signed main() {
        ios::sync_with_stdio(false); cin.tie(nullptr);

        return 0;
    }

snippet     header
abbr        #include "bits/stdc++.h"
options     head
    #include "bits/stdc++.h"
    using namespace std;

snippet     fixpoint
options     head
    template <typename Func>
    struct FixPoint : Func {
        inline constexpr FixPoint(Func &&f) noexcept : Func(forward<Func>(f)) {}

        template <typename... Args>
        inline decltype(auto) operator()(Args &&... args) const {
            return Func::operator()(*this, forward<Args>(args)...);
        }
    };

    template< typename Func >
    inline decltype(auto) makeFixPoint(Func &&f) {
        return FixPoint< Func >{forward< Func >(f)};
    }
